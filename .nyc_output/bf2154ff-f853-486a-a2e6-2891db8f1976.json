{"/home/jwatson/Source/typeqsfind/src/typeqs.ts":{"path":"/home/jwatson/Source/typeqsfind/src/typeqs.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":24}},"2":{"start":{"line":4,"column":23},"end":{"line":4,"column":50}},"3":{"start":{"line":5,"column":24},"end":{"line":5,"column":52}},"4":{"start":{"line":6,"column":29},"end":{"line":6,"column":62}},"5":{"start":{"line":7,"column":26},"end":{"line":7,"column":56}},"6":{"start":{"line":8,"column":26},"end":{"line":8,"column":56}},"7":{"start":{"line":9,"column":28},"end":{"line":32,"column":3}},"8":{"start":{"line":12,"column":4},"end":{"line":30,"column":6}},"9":{"start":{"line":13,"column":22},"end":{"line":13,"column":24}},"10":{"start":{"line":17,"column":8},"end":{"line":19,"column":9}},"11":{"start":{"line":18,"column":12},"end":{"line":18,"column":75}},"12":{"start":{"line":21,"column":8},"end":{"line":21,"column":76}},"13":{"start":{"line":23,"column":8},"end":{"line":23,"column":64}},"14":{"start":{"line":25,"column":8},"end":{"line":25,"column":70}},"15":{"start":{"line":27,"column":8},"end":{"line":27,"column":66}},"16":{"start":{"line":29,"column":8},"end":{"line":29,"column":23}},"17":{"start":{"line":31,"column":4},"end":{"line":31,"column":18}},"18":{"start":{"line":33,"column":0},"end":{"line":33,"column":24}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":9,"column":28},"end":{"line":9,"column":29}},"loc":{"start":{"line":9,"column":40},"end":{"line":32,"column":1}},"line":9},"1":{"name":"typeqs","decl":{"start":{"line":10,"column":13},"end":{"line":10,"column":19}},"loc":{"start":{"line":10,"column":22},"end":{"line":11,"column":5}},"line":10},"2":{"name":"(anonymous_2)","decl":{"start":{"line":12,"column":28},"end":{"line":12,"column":29}},"loc":{"start":{"line":12,"column":43},"end":{"line":30,"column":5}},"line":12}},"branchMap":{"0":{"loc":{"start":{"line":17,"column":8},"end":{"line":19,"column":9}},"type":"if","locations":[{"start":{"line":17,"column":8},"end":{"line":19,"column":9}},{"start":{"line":17,"column":8},"end":{"line":19,"column":9}}],"line":17}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":36,"10":36,"11":36,"12":35,"13":35,"14":35,"15":34,"16":34,"17":1,"18":1},"f":{"0":1,"1":0,"2":36},"b":{"0":[36,0]},"inputSourceMap":{"version":3,"file":"/home/jwatson/Source/typeqsfind/src/typeqs.ts","sources":["/home/jwatson/Source/typeqsfind/src/typeqs.ts"],"names":[],"mappings":";;;AAEA,mDAAgD;AAChD,qDAAkD;AAClD,+DAA4D;AAC5D,yDAAsD;AACtD,yDAAsD;AAEtD;IAAA;IA0BA,CAAC;IAzBe,qBAAc,GAA5B,UAA6B,GAAY;QACvC,IAAI,OAAO,GAAoB,EAAqB,CAAC;QAErD,gDAAgD;QAChD,uDAAuD;QACvD,4CAA4C;QAC5C,IAAG,qCAAiB,CAAC,UAAU,CAAC,GAAG,CAAC,EAAE;YACpC,OAAO,GAAG,qCAAiB,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC;SAC5C;QAED,qBAAqB;QACrB,2CAAoB,CAAC,SAAS,CAAC,GAAG,EAAE,OAAO,CAAC,CAAC;QAE7C,gBAAgB;QAChB,+BAAc,CAAC,SAAS,CAAC,GAAG,EAAE,OAAO,CAAC,CAAC;QAEvC,oBAAoB;QACpB,qCAAiB,CAAC,SAAS,CAAC,GAAG,EAAE,OAAO,CAAC,CAAC;QAE1C,wBAAwB;QACxB,iCAAe,CAAC,SAAS,CAAC,GAAG,EAAE,OAAO,CAAC,CAAC;QAExC,iBAAiB;QACjB,OAAO,OAA0B,CAAC;IACpC,CAAC;IACH,aAAC;AAAD,CAAC,AA1BD,IA0BC;AA1BY,wBAAM","sourcesContent":["import {Request} from 'express';\nimport {FindManyOptions} from 'typeorm';\nimport {WithTranslator} from './WithTranslator';\nimport {WhereTranslator} from './WhereTranslator';\nimport {PaginationTranslator} from './PaginationTranslator';\nimport {OrderByTranslator} from './OrderByTranslator';\nimport {OptionsTranslator} from './OptionsTranslator';\n\nexport class typeqs {\n  public static TranslateQuery(req: Request): FindManyOptions  {\n    var options: FindManyOptions = {} as FindManyOptions;\n\n    // Apply the options object from the querystring\n    // or the body first. Then other querystring parameters\n    // can be applied to modify it or add to it.\n    if(OptionsTranslator.hasOptions(req)) {\n      options = OptionsTranslator.translate(req);\n    }\n\n    // Process pagination\n    PaginationTranslator.translate(req, options);\n\n    // Add relations\n    WithTranslator.translate(req, options);\n\n    // Order the results\n    OrderByTranslator.translate(req, options);\n\n    // Process where clauses\n    WhereTranslator.translate(req, options);\n\n    // Return options\n    return options as FindManyOptions;\n  }\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"ff5047fe9fadacac6e7be587d34aedc4c371cb22"},"/home/jwatson/Source/typeqsfind/src/WithTranslator.ts":{"path":"/home/jwatson/Source/typeqsfind/src/WithTranslator.ts","statementMap":{"0":{"start":{"line":2,"column":21},"end":{"line":8,"column":1}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":88}},"2":{"start":{"line":3,"column":17},"end":{"line":3,"column":18}},"3":{"start":{"line":3,"column":24},"end":{"line":3,"column":25}},"4":{"start":{"line":3,"column":32},"end":{"line":3,"column":48}},"5":{"start":{"line":3,"column":63},"end":{"line":3,"column":88}},"6":{"start":{"line":4,"column":4},"end":{"line":6,"column":24}},"7":{"start":{"line":4,"column":17},"end":{"line":4,"column":25}},"8":{"start":{"line":4,"column":31},"end":{"line":4,"column":32}},"9":{"start":{"line":4,"column":38},"end":{"line":4,"column":39}},"10":{"start":{"line":5,"column":8},"end":{"line":6,"column":24}},"11":{"start":{"line":5,"column":21},"end":{"line":5,"column":33}},"12":{"start":{"line":5,"column":39},"end":{"line":5,"column":40}},"13":{"start":{"line":5,"column":47},"end":{"line":5,"column":55}},"14":{"start":{"line":6,"column":12},"end":{"line":6,"column":24}},"15":{"start":{"line":7,"column":4},"end":{"line":7,"column":13}},"16":{"start":{"line":9,"column":0},"end":{"line":9,"column":62}},"17":{"start":{"line":10,"column":0},"end":{"line":10,"column":55}},"18":{"start":{"line":11,"column":0},"end":{"line":13,"column":2}},"19":{"start":{"line":12,"column":4},"end":{"line":12,"column":30}},"20":{"start":{"line":14,"column":36},"end":{"line":46,"column":3}},"21":{"start":{"line":17,"column":4},"end":{"line":44,"column":6}},"22":{"start":{"line":19,"column":8},"end":{"line":43,"column":9}},"23":{"start":{"line":20,"column":20},"end":{"line":20,"column":22}},"24":{"start":{"line":21,"column":12},"end":{"line":26,"column":13}},"25":{"start":{"line":22,"column":16},"end":{"line":22,"column":50}},"26":{"start":{"line":25,"column":16},"end":{"line":25,"column":35}},"27":{"start":{"line":27,"column":12},"end":{"line":40,"column":15}},"28":{"start":{"line":28,"column":29},"end":{"line":28,"column":31}},"29":{"start":{"line":29,"column":16},"end":{"line":38,"column":17}},"30":{"start":{"line":30,"column":31},"end":{"line":30,"column":50}},"31":{"start":{"line":31,"column":32},"end":{"line":31,"column":47}},"32":{"start":{"line":32,"column":45},"end":{"line":32,"column":47}},"33":{"start":{"line":33,"column":31},"end":{"line":33,"column":33}},"34":{"start":{"line":34,"column":20},"end":{"line":37,"column":21}},"35":{"start":{"line":35,"column":24},"end":{"line":35,"column":54}},"36":{"start":{"line":36,"column":24},"end":{"line":36,"column":66}},"37":{"start":{"line":39,"column":16},"end":{"line":39,"column":68}},"38":{"start":{"line":41,"column":12},"end":{"line":41,"column":47}},"39":{"start":{"line":42,"column":12},"end":{"line":42,"column":34}},"40":{"start":{"line":45,"column":4},"end":{"line":45,"column":26}},"41":{"start":{"line":47,"column":0},"end":{"line":47,"column":40}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":54},"end":{"line":2,"column":55}},"loc":{"start":{"line":2,"column":66},"end":{"line":8,"column":1}},"line":2},"1":{"name":"(anonymous_1)","decl":{"start":{"line":11,"column":23},"end":{"line":11,"column":24}},"loc":{"start":{"line":11,"column":42},"end":{"line":13,"column":1}},"line":11},"2":{"name":"(anonymous_2)","decl":{"start":{"line":14,"column":36},"end":{"line":14,"column":37}},"loc":{"start":{"line":14,"column":48},"end":{"line":46,"column":1}},"line":14},"3":{"name":"WithTranslator","decl":{"start":{"line":15,"column":13},"end":{"line":15,"column":27}},"loc":{"start":{"line":15,"column":30},"end":{"line":16,"column":5}},"line":15},"4":{"name":"(anonymous_4)","decl":{"start":{"line":17,"column":31},"end":{"line":17,"column":32}},"loc":{"start":{"line":17,"column":55},"end":{"line":44,"column":5}},"line":17},"5":{"name":"(anonymous_5)","decl":{"start":{"line":27,"column":22},"end":{"line":27,"column":23}},"loc":{"start":{"line":27,"column":45},"end":{"line":40,"column":13}},"line":27}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":21},"end":{"line":8,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":22},"end":{"line":2,"column":26}},{"start":{"line":2,"column":30},"end":{"line":2,"column":49}},{"start":{"line":2,"column":54},"end":{"line":8,"column":1}}],"line":2},"1":{"loc":{"start":{"line":19,"column":8},"end":{"line":43,"column":9}},"type":"if","locations":[{"start":{"line":19,"column":8},"end":{"line":43,"column":9}},{"start":{"line":19,"column":8},"end":{"line":43,"column":9}}],"line":19},"2":{"loc":{"start":{"line":21,"column":12},"end":{"line":26,"column":13}},"type":"if","locations":[{"start":{"line":21,"column":12},"end":{"line":26,"column":13}},{"start":{"line":21,"column":12},"end":{"line":26,"column":13}}],"line":21},"3":{"loc":{"start":{"line":29,"column":16},"end":{"line":38,"column":17}},"type":"if","locations":[{"start":{"line":29,"column":16},"end":{"line":38,"column":17}},{"start":{"line":29,"column":16},"end":{"line":38,"column":17}}],"line":29}},"s":{"0":1,"1":5,"2":5,"3":5,"4":5,"5":10,"6":5,"7":5,"8":5,"9":5,"10":10,"11":10,"12":10,"13":10,"14":15,"15":5,"16":1,"17":1,"18":1,"19":8,"20":1,"21":1,"22":35,"23":3,"24":3,"25":1,"26":2,"27":3,"28":5,"29":5,"30":2,"31":2,"32":2,"33":2,"34":2,"35":5,"36":5,"37":5,"38":3,"39":3,"40":1,"41":1},"f":{"0":5,"1":8,"2":1,"3":0,"4":35,"5":5},"b":{"0":[1,1,1],"1":[3,32],"2":[1,2],"3":[2,3]},"inputSourceMap":{"version":3,"file":"/home/jwatson/Source/typeqsfind/src/WithTranslator.ts","sources":["/home/jwatson/Source/typeqsfind/src/WithTranslator.ts"],"names":[],"mappings":";;;;;;;;;;AAGa,QAAA,YAAY,GAAG,UAAC,CAAS,EAAE,CAAS,EAAE,CAAM;IACvD,OAAO,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC;AAC5B,CAAC,CAAC;AAEF;IAAA;IA4BA,CAAC;IA3Be,wBAAS,GAAvB,UAAwB,GAAY,EAAE,OAAwB;QAC5D,yCAAyC;QACzC,IAAG,GAAG,CAAC,KAAK,CAAC,IAAI,KAAK,SAAS,EAAE;YAC/B,IAAI,CAAC,GAAa,EAAE,CAAA;YACpB,IAAG,CAAC,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,CAAC,EAAE;gBACjC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC,CAAC;aACnC;iBAAM;gBACL,CAAC,GAAa,GAAG,CAAC,KAAK,CAAC,IAAI,CAAC;aAC9B;YACD,CAAC,CAAC,OAAO,CAAC,UAAC,GAAG,EAAE,GAAG,EAAE,CAAC;gBACpB,IAAI,MAAM,GAAa,EAAE,CAAC;gBAC1B,IAAG,GAAG,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,EAAE;oBAC1B,IAAI,IAAI,GAAW,CAAC,CAAC,MAAM,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;oBACvC,IAAI,KAAK,GAAa,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;oBACtC,IAAI,kBAAkB,GAAa,EAAE,CAAC;oBACtC,IAAI,IAAI,GAAW,EAAE,CAAC;oBACtB,OAAM,IAAI,GAAG,KAAK,CAAC,KAAK,EAAE,EAAE;wBAC1B,kBAAkB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;wBAC9B,MAAM,CAAC,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;qBAC3C;iBACF;gBACD,CAAC,CAAC,MAAM,OAAR,CAAC,kBAAQ,GAAG,EAAC,CAAC,GAAI,MAAM,GAAE;YAC5B,CAAC,CAAC,CAAC;YACH,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC,oBAAY,CAAC,CAAC;YAC3B,OAAO,CAAC,SAAS,GAAG,CAAC,CAAC;SACvB;IACH,CAAC;IACH,qBAAC;AAAD,CAAC,AA5BD,IA4BC;AA5BY,wCAAc","sourcesContent":["import {Request} from 'express';\nimport {FindManyOptions} from 'typeorm';\n\nexport const uniqueFilter = (v: string, i: number, a: any): boolean => {\n  return a.indexOf(v) === i;\n};\n\nexport class WithTranslator {\n  public static translate(req: Request, options: FindManyOptions): void {\n    // Process with[] array of relation names\n    if(req.query.with !== undefined) {\n      let w: string[] = []\n      if(!Array.isArray(req.query.with)) {\n        w.push(req.query.with.toString());\n      } else {\n        w = <string[]>req.query.with;\n      }\n      w.forEach((rel, idx, a) => {\n        let nested: string[] = [];\n        if(rel.indexOf('.') !== -1) {\n          let item: string = a.splice(idx, 1)[0];\n          let parts: string[] = item.split('.');\n          let cumulativeRelation: string[] = [];\n          let part: string = '';\n          while(part = parts.shift()) {\n            cumulativeRelation.push(part);\n            nested.push(cumulativeRelation.join('.'));\n          }\n        }\n        a.splice(idx,0,...nested);\n      });\n      w = w.filter(uniqueFilter);\n      options.relations = w;\n    }\n  }\n}\n\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"d5c79e91ad9aef331fc96f4c79cfe8b6ef9b6953"},"/home/jwatson/Source/typeqsfind/src/WhereTranslator.ts":{"path":"/home/jwatson/Source/typeqsfind/src/WhereTranslator.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":62}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":62}},"3":{"start":{"line":6,"column":0},"end":{"line":6,"column":33}},"4":{"start":{"line":7,"column":16},"end":{"line":7,"column":34}},"5":{"start":{"line":8,"column":19},"end":{"line":8,"column":57}},"6":{"start":{"line":9,"column":37},"end":{"line":131,"column":3}},"7":{"start":{"line":12,"column":4},"end":{"line":26,"column":6}},"8":{"start":{"line":13,"column":8},"end":{"line":15,"column":9}},"9":{"start":{"line":14,"column":12},"end":{"line":14,"column":32}},"10":{"start":{"line":16,"column":8},"end":{"line":25,"column":9}},"11":{"start":{"line":17,"column":22},"end":{"line":17,"column":24}},"12":{"start":{"line":18,"column":28},"end":{"line":18,"column":51}},"13":{"start":{"line":19,"column":12},"end":{"line":19,"column":35}},"14":{"start":{"line":20,"column":12},"end":{"line":20,"column":45}},"15":{"start":{"line":21,"column":12},"end":{"line":21,"column":52}},"16":{"start":{"line":24,"column":12},"end":{"line":24,"column":43}},"17":{"start":{"line":28,"column":4},"end":{"line":37,"column":6}},"18":{"start":{"line":29,"column":20},"end":{"line":29,"column":40}},"19":{"start":{"line":30,"column":20},"end":{"line":30,"column":31}},"20":{"start":{"line":31,"column":18},"end":{"line":35,"column":10}},"21":{"start":{"line":32,"column":21},"end":{"line":32,"column":23}},"22":{"start":{"line":33,"column":12},"end":{"line":33,"column":28}},"23":{"start":{"line":34,"column":12},"end":{"line":34,"column":22}},"24":{"start":{"line":36,"column":8},"end":{"line":36,"column":19}},"25":{"start":{"line":39,"column":4},"end":{"line":129,"column":6}},"26":{"start":{"line":41,"column":8},"end":{"line":41,"column":25}},"27":{"start":{"line":43,"column":8},"end":{"line":124,"column":9}},"28":{"start":{"line":45,"column":12},"end":{"line":49,"column":13}},"29":{"start":{"line":46,"column":32},"end":{"line":46,"column":60}},"30":{"start":{"line":47,"column":28},"end":{"line":47,"column":94}},"31":{"start":{"line":47,"column":67},"end":{"line":47,"column":91}},"32":{"start":{"line":48,"column":16},"end":{"line":48,"column":78}},"33":{"start":{"line":51,"column":12},"end":{"line":55,"column":13}},"34":{"start":{"line":52,"column":32},"end":{"line":52,"column":58}},"35":{"start":{"line":53,"column":28},"end":{"line":53,"column":54}},"36":{"start":{"line":54,"column":16},"end":{"line":54,"column":60}},"37":{"start":{"line":57,"column":12},"end":{"line":61,"column":13}},"38":{"start":{"line":58,"column":32},"end":{"line":58,"column":60}},"39":{"start":{"line":59,"column":28},"end":{"line":59,"column":94}},"40":{"start":{"line":59,"column":67},"end":{"line":59,"column":91}},"41":{"start":{"line":60,"column":16},"end":{"line":60,"column":74}},"42":{"start":{"line":63,"column":12},"end":{"line":67,"column":13}},"43":{"start":{"line":64,"column":32},"end":{"line":64,"column":63}},"44":{"start":{"line":65,"column":28},"end":{"line":65,"column":94}},"45":{"start":{"line":65,"column":67},"end":{"line":65,"column":91}},"46":{"start":{"line":66,"column":16},"end":{"line":66,"column":89}},"47":{"start":{"line":69,"column":12},"end":{"line":72,"column":13}},"48":{"start":{"line":70,"column":32},"end":{"line":70,"column":59}},"49":{"start":{"line":71,"column":16},"end":{"line":71,"column":73}},"50":{"start":{"line":74,"column":12},"end":{"line":77,"column":13}},"51":{"start":{"line":75,"column":32},"end":{"line":75,"column":62}},"52":{"start":{"line":76,"column":16},"end":{"line":76,"column":88}},"53":{"start":{"line":79,"column":12},"end":{"line":83,"column":13}},"54":{"start":{"line":80,"column":32},"end":{"line":80,"column":60}},"55":{"start":{"line":81,"column":28},"end":{"line":81,"column":94}},"56":{"start":{"line":81,"column":67},"end":{"line":81,"column":91}},"57":{"start":{"line":82,"column":16},"end":{"line":82,"column":92}},"58":{"start":{"line":85,"column":12},"end":{"line":89,"column":13}},"59":{"start":{"line":86,"column":32},"end":{"line":86,"column":57}},"60":{"start":{"line":87,"column":28},"end":{"line":87,"column":54}},"61":{"start":{"line":88,"column":16},"end":{"line":88,"column":76}},"62":{"start":{"line":91,"column":12},"end":{"line":95,"column":13}},"63":{"start":{"line":92,"column":32},"end":{"line":92,"column":58}},"64":{"start":{"line":93,"column":28},"end":{"line":93,"column":54}},"65":{"start":{"line":94,"column":16},"end":{"line":94,"column":77}},"66":{"start":{"line":97,"column":28},"end":{"line":97,"column":55}},"67":{"start":{"line":98,"column":12},"end":{"line":102,"column":13}},"68":{"start":{"line":99,"column":32},"end":{"line":99,"column":59}},"69":{"start":{"line":100,"column":28},"end":{"line":100,"column":54}},"70":{"start":{"line":101,"column":16},"end":{"line":101,"column":80}},"71":{"start":{"line":104,"column":29},"end":{"line":104,"column":52}},"72":{"start":{"line":105,"column":12},"end":{"line":109,"column":13}},"73":{"start":{"line":106,"column":32},"end":{"line":106,"column":60}},"74":{"start":{"line":107,"column":28},"end":{"line":107,"column":54}},"75":{"start":{"line":108,"column":16},"end":{"line":108,"column":87}},"76":{"start":{"line":111,"column":28},"end":{"line":111,"column":52}},"77":{"start":{"line":112,"column":12},"end":{"line":116,"column":13}},"78":{"start":{"line":113,"column":32},"end":{"line":113,"column":59}},"79":{"start":{"line":114,"column":28},"end":{"line":114,"column":54}},"80":{"start":{"line":115,"column":16},"end":{"line":115,"column":80}},"81":{"start":{"line":118,"column":29},"end":{"line":118,"column":49}},"82":{"start":{"line":119,"column":12},"end":{"line":123,"column":13}},"83":{"start":{"line":120,"column":32},"end":{"line":120,"column":60}},"84":{"start":{"line":121,"column":28},"end":{"line":121,"column":54}},"85":{"start":{"line":122,"column":16},"end":{"line":122,"column":87}},"86":{"start":{"line":126,"column":8},"end":{"line":128,"column":9}},"87":{"start":{"line":127,"column":12},"end":{"line":127,"column":40}},"88":{"start":{"line":130,"column":4},"end":{"line":130,"column":27}},"89":{"start":{"line":132,"column":0},"end":{"line":132,"column":42}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":56},"end":{"line":2,"column":57}},"loc":{"start":{"line":2,"column":71},"end":{"line":4,"column":1}},"line":2},"1":{"name":"(anonymous_1)","decl":{"start":{"line":9,"column":37},"end":{"line":9,"column":38}},"loc":{"start":{"line":9,"column":49},"end":{"line":131,"column":1}},"line":9},"2":{"name":"WhereTranslator","decl":{"start":{"line":10,"column":13},"end":{"line":10,"column":28}},"loc":{"start":{"line":10,"column":31},"end":{"line":11,"column":5}},"line":10},"3":{"name":"(anonymous_3)","decl":{"start":{"line":12,"column":43},"end":{"line":12,"column":44}},"loc":{"start":{"line":12,"column":71},"end":{"line":26,"column":5}},"line":12},"4":{"name":"(anonymous_4)","decl":{"start":{"line":28,"column":30},"end":{"line":28,"column":31}},"loc":{"start":{"line":28,"column":59},"end":{"line":37,"column":5}},"line":28},"5":{"name":"(anonymous_5)","decl":{"start":{"line":31,"column":29},"end":{"line":31,"column":30}},"loc":{"start":{"line":31,"column":44},"end":{"line":35,"column":9}},"line":31},"6":{"name":"(anonymous_6)","decl":{"start":{"line":39,"column":32},"end":{"line":39,"column":33}},"loc":{"start":{"line":39,"column":56},"end":{"line":129,"column":5}},"line":39},"7":{"name":"(anonymous_7)","decl":{"start":{"line":47,"column":48},"end":{"line":47,"column":49}},"loc":{"start":{"line":47,"column":65},"end":{"line":47,"column":93}},"line":47},"8":{"name":"(anonymous_8)","decl":{"start":{"line":59,"column":48},"end":{"line":59,"column":49}},"loc":{"start":{"line":59,"column":65},"end":{"line":59,"column":93}},"line":59},"9":{"name":"(anonymous_9)","decl":{"start":{"line":65,"column":48},"end":{"line":65,"column":49}},"loc":{"start":{"line":65,"column":65},"end":{"line":65,"column":93}},"line":65},"10":{"name":"(anonymous_10)","decl":{"start":{"line":81,"column":48},"end":{"line":81,"column":49}},"loc":{"start":{"line":81,"column":65},"end":{"line":81,"column":93}},"line":81}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":56},"end":{"line":4,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":11},"end":{"line":3,"column":61}},"type":"cond-expr","locations":[{"start":{"line":3,"column":37},"end":{"line":3,"column":40}},{"start":{"line":3,"column":43},"end":{"line":3,"column":61}}],"line":3},"2":{"loc":{"start":{"line":3,"column":12},"end":{"line":3,"column":33}},"type":"binary-expr","locations":[{"start":{"line":3,"column":12},"end":{"line":3,"column":15}},{"start":{"line":3,"column":19},"end":{"line":3,"column":33}}],"line":3},"3":{"loc":{"start":{"line":13,"column":8},"end":{"line":15,"column":9}},"type":"if","locations":[{"start":{"line":13,"column":8},"end":{"line":15,"column":9}},{"start":{"line":13,"column":8},"end":{"line":15,"column":9}}],"line":13},"4":{"loc":{"start":{"line":13,"column":12},"end":{"line":13,"column":52}},"type":"binary-expr","locations":[{"start":{"line":13,"column":12},"end":{"line":13,"column":28}},{"start":{"line":13,"column":32},"end":{"line":13,"column":52}}],"line":13},"5":{"loc":{"start":{"line":16,"column":8},"end":{"line":25,"column":9}},"type":"if","locations":[{"start":{"line":16,"column":8},"end":{"line":25,"column":9}},{"start":{"line":16,"column":8},"end":{"line":25,"column":9}}],"line":16},"6":{"loc":{"start":{"line":45,"column":12},"end":{"line":49,"column":13}},"type":"if","locations":[{"start":{"line":45,"column":12},"end":{"line":49,"column":13}},{"start":{"line":45,"column":12},"end":{"line":49,"column":13}}],"line":45},"7":{"loc":{"start":{"line":51,"column":12},"end":{"line":55,"column":13}},"type":"if","locations":[{"start":{"line":51,"column":12},"end":{"line":55,"column":13}},{"start":{"line":51,"column":12},"end":{"line":55,"column":13}}],"line":51},"8":{"loc":{"start":{"line":57,"column":12},"end":{"line":61,"column":13}},"type":"if","locations":[{"start":{"line":57,"column":12},"end":{"line":61,"column":13}},{"start":{"line":57,"column":12},"end":{"line":61,"column":13}}],"line":57},"9":{"loc":{"start":{"line":63,"column":12},"end":{"line":67,"column":13}},"type":"if","locations":[{"start":{"line":63,"column":12},"end":{"line":67,"column":13}},{"start":{"line":63,"column":12},"end":{"line":67,"column":13}}],"line":63},"10":{"loc":{"start":{"line":69,"column":12},"end":{"line":72,"column":13}},"type":"if","locations":[{"start":{"line":69,"column":12},"end":{"line":72,"column":13}},{"start":{"line":69,"column":12},"end":{"line":72,"column":13}}],"line":69},"11":{"loc":{"start":{"line":74,"column":12},"end":{"line":77,"column":13}},"type":"if","locations":[{"start":{"line":74,"column":12},"end":{"line":77,"column":13}},{"start":{"line":74,"column":12},"end":{"line":77,"column":13}}],"line":74},"12":{"loc":{"start":{"line":79,"column":12},"end":{"line":83,"column":13}},"type":"if","locations":[{"start":{"line":79,"column":12},"end":{"line":83,"column":13}},{"start":{"line":79,"column":12},"end":{"line":83,"column":13}}],"line":79},"13":{"loc":{"start":{"line":85,"column":12},"end":{"line":89,"column":13}},"type":"if","locations":[{"start":{"line":85,"column":12},"end":{"line":89,"column":13}},{"start":{"line":85,"column":12},"end":{"line":89,"column":13}}],"line":85},"14":{"loc":{"start":{"line":91,"column":12},"end":{"line":95,"column":13}},"type":"if","locations":[{"start":{"line":91,"column":12},"end":{"line":95,"column":13}},{"start":{"line":91,"column":12},"end":{"line":95,"column":13}}],"line":91},"15":{"loc":{"start":{"line":98,"column":12},"end":{"line":102,"column":13}},"type":"if","locations":[{"start":{"line":98,"column":12},"end":{"line":102,"column":13}},{"start":{"line":98,"column":12},"end":{"line":102,"column":13}}],"line":98},"16":{"loc":{"start":{"line":105,"column":12},"end":{"line":109,"column":13}},"type":"if","locations":[{"start":{"line":105,"column":12},"end":{"line":109,"column":13}},{"start":{"line":105,"column":12},"end":{"line":109,"column":13}}],"line":105},"17":{"loc":{"start":{"line":112,"column":12},"end":{"line":116,"column":13}},"type":"if","locations":[{"start":{"line":112,"column":12},"end":{"line":116,"column":13}},{"start":{"line":112,"column":12},"end":{"line":116,"column":13}}],"line":112},"18":{"loc":{"start":{"line":119,"column":12},"end":{"line":123,"column":13}},"type":"if","locations":[{"start":{"line":119,"column":12},"end":{"line":123,"column":13}},{"start":{"line":119,"column":12},"end":{"line":123,"column":13}}],"line":119},"19":{"loc":{"start":{"line":126,"column":8},"end":{"line":128,"column":9}},"type":"if","locations":[{"start":{"line":126,"column":8},"end":{"line":128,"column":9}},{"start":{"line":126,"column":8},"end":{"line":128,"column":9}}],"line":126}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":17,"9":1,"10":17,"11":14,"12":14,"13":14,"14":14,"15":14,"16":3,"17":1,"18":1,"19":1,"20":1,"21":2,"22":2,"23":2,"24":1,"25":1,"26":34,"27":34,"28":35,"29":1,"30":1,"31":2,"32":1,"33":35,"34":3,"35":3,"36":3,"37":35,"38":3,"39":3,"40":6,"41":3,"42":35,"43":1,"44":1,"45":2,"46":1,"47":35,"48":1,"49":1,"50":35,"51":1,"52":1,"53":35,"54":1,"55":1,"56":2,"57":1,"58":35,"59":1,"60":1,"61":1,"62":35,"63":1,"64":1,"65":1,"66":35,"67":35,"68":1,"69":1,"70":1,"71":35,"72":35,"73":1,"74":1,"75":1,"76":35,"77":35,"78":1,"79":1,"80":1,"81":35,"82":35,"83":1,"84":1,"85":1,"86":34,"87":17,"88":1,"89":1},"f":{"0":1,"1":1,"2":0,"3":17,"4":1,"5":2,"6":34,"7":2,"8":6,"9":2,"10":2},"b":{"0":[1,1,1],"1":[0,1],"2":[1,1],"3":[1,16],"4":[17,1],"5":[14,3],"6":[1,34],"7":[3,32],"8":[3,32],"9":[1,34],"10":[1,34],"11":[1,34],"12":[1,34],"13":[1,34],"14":[1,34],"15":[1,34],"16":[1,34],"17":[1,34],"18":[1,34],"19":[17,17]},"inputSourceMap":{"version":3,"file":"/home/jwatson/Source/typeqsfind/src/WhereTranslator.ts","sources":["/home/jwatson/Source/typeqsfind/src/WhereTranslator.ts"],"names":[],"mappings":"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","sourcesContent":["import {Request} from 'express';\nimport {FindManyOptions, IsNull, Not, FindOperator, Between, Like, MoreThan, LessThan, MoreThanOrEqual, LessThanOrEqual, ILike, In} from 'typeorm';\nimport dot from 'dot-object';\n\nexport class WhereTranslator {\n  // Set up some helper functions for orderBy\n  //\n  public static wheres: {[key: string]: any} | {[key: string]: any}[];\n  \n  public static setNestedFieldValues(fieldName: string, value: string | string[] | FindOperator<any> | {[key: string]: any}[]) {\n    if(fieldName === '' && Array.isArray(value)) {\n      this.wheres = value;\n    }\n    if(fieldName.indexOf('.') !== -1) {\n      let obj: any = {};\n      let firstName: string = fieldName.split('.')[0];\n      obj[fieldName] = value;\n      dot.object(obj);\n      this.wheres[firstName] = obj[firstName];\n    } else {\n      this.wheres[fieldName] = value;\n    }\n  }\n\n  // orwhereField helper\n  public static OrWhere(fieldName: string, values: string[]): any {\n    let parts: string[] = fieldName.split('.');\n    let field: string = parts.pop();\n    let ret: any[] = values.map((val: string) => {\n      let ob: any = {};\n      ob[field] = val;\n      return ob;\n    })\n    return ret;\n  };\n\n\n  public static translate(req: Request, options: FindManyOptions): void {\n    // Begin processing WHERE options\n    this.wheres = {};\n\n    // Loop through request looking for where-type operators\n    for(let name in req.query) {\n      // Process whereField\n      if(name.indexOf('orwhere') === 0) {\n        let fieldName: string = name.replace(/^orwhere/,'');\n        let value: string[] = (<string[]>req.query[name]).map(value => value.toString());\n        this.setNestedFieldValues('', this.OrWhere(fieldName, value));\n      }\n\n      // Process whereField\n      if(name.indexOf('where') === 0) {\n        let fieldName: string = name.replace(/^where/,'');\n        let value: string = req.query[name].toString();\n        this.setNestedFieldValues(fieldName, value);\n      }\n\n      // Process inarrayField\n      if(name.indexOf('inarray') === 0) {\n        let fieldName: string = name.replace(/^inarray/,'');\n        let value: string[] = (<string[]>req.query[name]).map(value => value.toString());\n        this.setNestedFieldValues(fieldName, In(value));\n      }\n\n      // Process notinarrayField\n      if(name.indexOf('notinarray') === 0) {\n        let fieldName: string = name.replace(/^notinarray/,'');\n        let value: string[] = (<string[]>req.query[name]).map(value => value.toString());\n        this.setNestedFieldValues(fieldName, Not(In(value)));\n      }\n\n      // Process isnullField\n      if(name.indexOf('isnull') === 0) {\n        let fieldName: string = name.replace(/^isnull/,'');\n        this.setNestedFieldValues(fieldName, IsNull());\n      }\n\n      // Process isnullField\n      if(name.indexOf('isnotnull') === 0) {\n        let fieldName: string = name.replace(/^isnotnull/,'');\n        this.setNestedFieldValues(fieldName, Not(IsNull()));\n      }\n\n      // Process betweenField\n      if(name.indexOf('between') === 0) {\n        let fieldName: string = name.replace(/^between/,'');\n        let value: string[] = (<string[]>req.query[name]).map(value => value.toString());\n        this.setNestedFieldValues(fieldName, Between(value[0], value[1]));\n      }\n\n      // Process likeField\n      if(name.indexOf('like') === 0) {\n        let fieldName: string = name.replace(/^like/,'');\n        let value: string = req.query[name].toString();\n        this.setNestedFieldValues(fieldName, Like(value));\n      }\n\n      // Process likeField\n      if(name.indexOf('ilike') === 0) {\n        let fieldName: string = name.replace(/^ilike/,'');\n        let value: string = req.query[name].toString();\n        this.setNestedFieldValues(fieldName, ILike(value));\n      }\n\n      // Process greaterthanField\n      let gtMatcher = /^greaterthan(?!orequalto)/;\n      if(name.match(gtMatcher)) {\n        let fieldName: string = name.replace(gtMatcher,'');\n        let value: string = req.query[name].toString();\n        this.setNestedFieldValues(fieldName, MoreThan(value));\n      }\n\n      // Process greaterthanorequaltoField\n      let gteMatcher = /^greaterthanorequalto/;\n      if(name.match(gteMatcher)) {\n        let fieldName: string = name.replace(gteMatcher,'');\n        let value: string = req.query[name].toString();\n        this.setNestedFieldValues(fieldName, MoreThanOrEqual(value));\n      }\n\n      // Process lessthanField\n      let ltMatcher = /^lessthan(?!orequalto)/;\n      if(name.match(ltMatcher)) {\n        let fieldName: string = name.replace(ltMatcher,'');\n        let value: string = req.query[name].toString();\n        this.setNestedFieldValues(fieldName, LessThan(value));\n      }\n\n      // Process lessthanorequaltoField\n      let lteMatcher = /^lessthanorequalto/;\n      if(name.match(lteMatcher)) {\n        let fieldName: string = name.replace(lteMatcher,'');\n        let value: string = req.query[name].toString();\n        this.setNestedFieldValues(fieldName, LessThanOrEqual(value));\n      }\n\n    }\n\n    // Set the wheres\n    if(Object.keys(this.wheres).length !== 0) {\n      options.where = this.wheres;\n    }\n  }\n}\n\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"2cd50aaab3381ae7bfb964fb865e657f9028d6ba"},"/home/jwatson/Source/typeqsfind/src/PaginationTranslator.ts":{"path":"/home/jwatson/Source/typeqsfind/src/PaginationTranslator.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":38}},"2":{"start":{"line":4,"column":42},"end":{"line":21,"column":3}},"3":{"start":{"line":7,"column":4},"end":{"line":19,"column":6}},"4":{"start":{"line":9,"column":8},"end":{"line":14,"column":24}},"5":{"start":{"line":15,"column":8},"end":{"line":18,"column":21}},"6":{"start":{"line":20,"column":4},"end":{"line":20,"column":32}},"7":{"start":{"line":22,"column":0},"end":{"line":22,"column":52}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":4,"column":42},"end":{"line":4,"column":43}},"loc":{"start":{"line":4,"column":54},"end":{"line":21,"column":1}},"line":4},"1":{"name":"PaginationTranslator","decl":{"start":{"line":5,"column":13},"end":{"line":5,"column":33}},"loc":{"start":{"line":5,"column":36},"end":{"line":6,"column":5}},"line":5},"2":{"name":"(anonymous_2)","decl":{"start":{"line":7,"column":37},"end":{"line":7,"column":38}},"loc":{"start":{"line":7,"column":61},"end":{"line":19,"column":5}},"line":7}},"branchMap":{"0":{"loc":{"start":{"line":10,"column":12},"end":{"line":14,"column":23}},"type":"cond-expr","locations":[{"start":{"line":11,"column":16},"end":{"line":11,"column":53}},{"start":{"line":12,"column":18},"end":{"line":14,"column":23}}],"line":10},"1":{"loc":{"start":{"line":12,"column":18},"end":{"line":14,"column":23}},"type":"cond-expr","locations":[{"start":{"line":13,"column":20},"end":{"line":13,"column":56}},{"start":{"line":14,"column":22},"end":{"line":14,"column":23}}],"line":12},"2":{"loc":{"start":{"line":16,"column":12},"end":{"line":18,"column":20}},"type":"cond-expr","locations":[{"start":{"line":17,"column":16},"end":{"line":17,"column":52}},{"start":{"line":18,"column":18},"end":{"line":18,"column":20}}],"line":16}},"s":{"0":1,"1":1,"2":1,"3":1,"4":35,"5":35,"6":1,"7":1},"f":{"0":1,"1":0,"2":35},"b":{"0":[1,34],"1":[1,33],"2":[2,33]},"inputSourceMap":{"version":3,"file":"/home/jwatson/Source/typeqsfind/src/PaginationTranslator.ts","sources":["/home/jwatson/Source/typeqsfind/src/PaginationTranslator.ts"],"names":[],"mappings":";;;AAGA;IAAA;IAeA,CAAC;IAde,8BAAS,GAAvB,UAAwB,GAAY,EAAE,OAAwB;QAC5D,2BAA2B;QAC3B,OAAO,CAAC,IAAI;YACV,GAAG,CAAC,KAAK,CAAC,MAAM,KAAK,SAAS,CAAC,CAAC;gBAChC,QAAQ,CAAC,GAAG,CAAC,KAAK,CAAC,MAAM,CAAC,QAAQ,EAAE,CAAC;gBACrC,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,KAAK,KAAK,SAAS,CAAC,CAAC;oBACjC,QAAQ,CAAC,GAAG,CAAC,KAAK,CAAC,KAAK,CAAC,QAAQ,EAAE,CAAC;oBACpC,CAAC,CAAC,CAAC,CAAC;QACN,OAAO,CAAC,IAAI;YACV,GAAG,CAAC,KAAK,CAAC,KAAK,KAAK,SAAS,CAAC,CAAC;gBAC/B,QAAQ,CAAC,GAAG,CAAC,KAAK,CAAC,KAAK,CAAC,QAAQ,EAAE,CAAC;gBACpC,CAAC,CAAC,EAAE,CAAC;IAET,CAAC;IACH,2BAAC;AAAD,CAAC,AAfD,IAeC;AAfY,oDAAoB","sourcesContent":["import {Request} from 'express';\nimport {FindManyOptions} from 'typeorm';\n\nexport class PaginationTranslator {\n  public static translate(req: Request, options: FindManyOptions): void {\n    // Process offset and limit\n    options.skip =\n      req.query.offset !== undefined ?\n      parseInt(req.query.offset.toString())\n      : req.query.start !== undefined ?\n      parseInt(req.query.start.toString())\n      : 0;\n    options.take =\n      req.query.limit !== undefined ?\n      parseInt(req.query.limit.toString())\n      : 10;\n\n  }\n}\n\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"c97817f8c499556b7e51ca2505e148411670374b"},"/home/jwatson/Source/typeqsfind/src/OrderByTranslator.ts":{"path":"/home/jwatson/Source/typeqsfind/src/OrderByTranslator.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":35}},"2":{"start":{"line":4,"column":39},"end":{"line":51,"column":3}},"3":{"start":{"line":8,"column":4},"end":{"line":12,"column":6}},"4":{"start":{"line":9,"column":8},"end":{"line":11,"column":9}},"5":{"start":{"line":10,"column":12},"end":{"line":10,"column":95}},"6":{"start":{"line":13,"column":4},"end":{"line":23,"column":6}},"7":{"start":{"line":14,"column":8},"end":{"line":14,"column":59}},"8":{"start":{"line":15,"column":20},"end":{"line":15,"column":35}},"9":{"start":{"line":16,"column":8},"end":{"line":22,"column":9}},"10":{"start":{"line":17,"column":12},"end":{"line":17,"column":57}},"11":{"start":{"line":18,"column":12},"end":{"line":18,"column":76}},"12":{"start":{"line":21,"column":12},"end":{"line":21,"column":40}},"13":{"start":{"line":25,"column":4},"end":{"line":49,"column":6}},"14":{"start":{"line":27,"column":8},"end":{"line":48,"column":9}},"15":{"start":{"line":28,"column":33},"end":{"line":28,"column":44}},"16":{"start":{"line":29,"column":12},"end":{"line":40,"column":13}},"17":{"start":{"line":30,"column":16},"end":{"line":39,"column":17}},"18":{"start":{"line":31,"column":20},"end":{"line":34,"column":21}},"19":{"start":{"line":31,"column":33},"end":{"line":31,"column":34}},"20":{"start":{"line":32,"column":40},"end":{"line":32,"column":69}},"21":{"start":{"line":33,"column":24},"end":{"line":33,"column":66}},"22":{"start":{"line":37,"column":36},"end":{"line":37,"column":64}},"23":{"start":{"line":38,"column":20},"end":{"line":38,"column":62}},"24":{"start":{"line":42,"column":28},"end":{"line":42,"column":40}},"25":{"start":{"line":43,"column":12},"end":{"line":47,"column":13}},"26":{"start":{"line":44,"column":32},"end":{"line":44,"column":60}},"27":{"start":{"line":45,"column":32},"end":{"line":45,"column":86}},"28":{"start":{"line":46,"column":16},"end":{"line":46,"column":76}},"29":{"start":{"line":50,"column":4},"end":{"line":50,"column":29}},"30":{"start":{"line":52,"column":0},"end":{"line":52,"column":46}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":4,"column":39},"end":{"line":4,"column":40}},"loc":{"start":{"line":4,"column":51},"end":{"line":51,"column":1}},"line":4},"1":{"name":"OrderByTranslator","decl":{"start":{"line":5,"column":13},"end":{"line":5,"column":30}},"loc":{"start":{"line":5,"column":33},"end":{"line":6,"column":5}},"line":5},"2":{"name":"(anonymous_2)","decl":{"start":{"line":8,"column":48},"end":{"line":8,"column":49}},"loc":{"start":{"line":8,"column":94},"end":{"line":12,"column":5}},"line":8},"3":{"name":"(anonymous_3)","decl":{"start":{"line":13,"column":41},"end":{"line":13,"column":42}},"loc":{"start":{"line":13,"column":66},"end":{"line":23,"column":5}},"line":13},"4":{"name":"(anonymous_4)","decl":{"start":{"line":25,"column":34},"end":{"line":25,"column":35}},"loc":{"start":{"line":25,"column":58},"end":{"line":49,"column":5}},"line":25}},"branchMap":{"0":{"loc":{"start":{"line":9,"column":8},"end":{"line":11,"column":9}},"type":"if","locations":[{"start":{"line":9,"column":8},"end":{"line":11,"column":9}},{"start":{"line":9,"column":8},"end":{"line":11,"column":9}}],"line":9},"1":{"loc":{"start":{"line":9,"column":12},"end":{"line":9,"column":75}},"type":"binary-expr","locations":[{"start":{"line":9,"column":12},"end":{"line":9,"column":41}},{"start":{"line":9,"column":45},"end":{"line":9,"column":75}}],"line":9},"2":{"loc":{"start":{"line":14,"column":24},"end":{"line":14,"column":58}},"type":"cond-expr","locations":[{"start":{"line":14,"column":40},"end":{"line":14,"column":53}},{"start":{"line":14,"column":56},"end":{"line":14,"column":58}}],"line":14},"3":{"loc":{"start":{"line":16,"column":8},"end":{"line":22,"column":9}},"type":"if","locations":[{"start":{"line":16,"column":8},"end":{"line":22,"column":9}},{"start":{"line":16,"column":8},"end":{"line":22,"column":9}}],"line":16},"4":{"loc":{"start":{"line":18,"column":38},"end":{"line":18,"column":75}},"type":"cond-expr","locations":[{"start":{"line":18,"column":61},"end":{"line":18,"column":66}},{"start":{"line":18,"column":69},"end":{"line":18,"column":75}}],"line":18},"5":{"loc":{"start":{"line":29,"column":12},"end":{"line":40,"column":13}},"type":"if","locations":[{"start":{"line":29,"column":12},"end":{"line":40,"column":13}},{"start":{"line":29,"column":12},"end":{"line":40,"column":13}}],"line":29},"6":{"loc":{"start":{"line":30,"column":16},"end":{"line":39,"column":17}},"type":"if","locations":[{"start":{"line":30,"column":16},"end":{"line":39,"column":17}},{"start":{"line":30,"column":16},"end":{"line":39,"column":17}}],"line":30},"7":{"loc":{"start":{"line":43,"column":12},"end":{"line":47,"column":13}},"type":"if","locations":[{"start":{"line":43,"column":12},"end":{"line":47,"column":13}},{"start":{"line":43,"column":12},"end":{"line":47,"column":13}}],"line":43},"8":{"loc":{"start":{"line":45,"column":32},"end":{"line":45,"column":86}},"type":"cond-expr","locations":[{"start":{"line":45,"column":52},"end":{"line":45,"column":78}},{"start":{"line":45,"column":81},"end":{"line":45,"column":86}}],"line":45}},"s":{"0":1,"1":1,"2":1,"3":1,"4":11,"5":1,"6":1,"7":14,"8":14,"9":14,"10":11,"11":10,"12":3,"13":1,"14":35,"15":36,"16":36,"17":7,"18":4,"19":4,"20":7,"21":7,"22":3,"23":3,"24":35,"25":35,"26":4,"27":4,"28":4,"29":1,"30":1},"f":{"0":1,"1":0,"2":11,"3":14,"4":35},"b":{"0":[1,10],"1":[11,6],"2":[4,10],"3":[11,3],"4":[5,5],"5":[7,29],"6":[4,3],"7":[4,31],"8":[3,1]},"inputSourceMap":{"version":3,"file":"/home/jwatson/Source/typeqsfind/src/OrderByTranslator.ts","sources":["/home/jwatson/Source/typeqsfind/src/OrderByTranslator.ts"],"names":[],"mappings":";;;AAGA;IAAA;IA4CA,CAAC;IA3CC,2CAA2C;IACpC,yCAAuB,GAA9B,UAA+B,mBAA2B,EAAE,aAAqB;QAC/E,IAAG,mBAAmB,KAAK,KAAK,IAAI,mBAAmB,KAAK,MAAM,EAAE;YAClE,MAAM,UAAU,GAAC,aAAa,GAAC,+CAA+C,CAAC;SAChF;IACH,CAAC;IAEM,kCAAgB,GAAvB,UAAwB,IAAY,EAAE,OAAwB;QAC5D,OAAO,CAAC,KAAK,GAAG,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,OAAO,CAAC,KAAK,CAAA,CAAC,CAAA,EAAE,CAAC;QACjD,IAAI,KAAK,GAAa,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;QACtC,IAAG,KAAK,CAAC,MAAM,GAAG,CAAC,EAAE;YACnB,IAAI,CAAC,uBAAuB,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC;YAC7C,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,KAAG,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,CAAA,CAAC,CAAA,MAAM,CAAC;SAC7D;aAAM;YACL,OAAO,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,KAAK,CAAC;SAC7B;IACH,CAAC;IAAA,CAAC;IAEY,2BAAS,GAAvB,UAAwB,GAAY,EAAE,OAAwB;QAC5D,sCAAsC;QACtC,KAAI,IAAI,IAAI,IAAI,GAAG,CAAC,KAAK,EAAE;YACzB,IAAI,cAAc,GAAG,WAAW,CAAC;YACjC,IAAG,IAAI,CAAC,KAAK,CAAC,cAAc,CAAC,EAAE;gBAC7B,IAAG,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,EAAE;oBACjC,KAAI,IAAI,CAAC,GAAQ,CAAC,EAAC,CAAC,GAAC,GAAG,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,MAAM,EAAC,CAAC,EAAE,EAAE;wBAC/C,IAAI,SAAS,GAAW,GAAG,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,QAAQ,EAAE,CAAC;wBACtD,IAAI,CAAC,gBAAgB,CAAC,SAAS,EAAE,OAAO,CAAC,CAAC;qBAC3C;iBACF;qBAAM;oBACL,IAAI,SAAS,GAAW,GAAG,CAAC,KAAK,CAAC,OAAO,CAAC,QAAQ,EAAE,CAAC;oBACrD,IAAI,CAAC,gBAAgB,CAAC,SAAS,EAAE,OAAO,CAAC,CAAC;iBAC3C;aACF;YAED,uCAAuC;YACvC,IAAI,SAAS,GAAG,YAAY,CAAC;YAC7B,IAAG,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,EAAE;gBACxB,IAAI,SAAS,GAAW,IAAI,CAAC,OAAO,CAAC,UAAU,EAAC,EAAE,CAAC,CAAC;gBACpD,IAAI,SAAS,GAAW,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,QAAQ,EAAE,CAAA,CAAC,CAAA,KAAK,CAAC;gBAC7E,IAAI,CAAC,gBAAgB,CAAC,SAAS,GAAG,GAAG,GAAG,SAAS,EAAE,OAAO,CAAC,CAAC;aAC7D;SACF;IACH,CAAC;IACH,wBAAC;AAAD,CAAC,AA5CD,IA4CC;AA5CY,8CAAiB","sourcesContent":["import {Request} from 'express';\nimport {FindManyOptions} from 'typeorm';\n\nexport class OrderByTranslator {\n  // Set up some helper functions for orderby\n  static catchOrderByFormatError(directionalOperator: string, originalValue: string): void {\n    if(directionalOperator !== 'ASC' && directionalOperator !== 'DESC') {\n      throw 'orderby='+originalValue+' does not have a proper directional operator.';\n    }\n  }\n\n  static setSingleOrderBy(name: string, options: FindManyOptions): void {\n    options.order = options.order ? options.order:{};\n    let parts: string[] = name.split('|');\n    if(parts.length > 1) {\n      this.catchOrderByFormatError(parts[1], name);\n      options.order[parts[0]] = (parts[1]==='ASC') ? 'ASC':'DESC';\n    } else {\n      options.order[name] = 'ASC';\n    }\n  };\n\n  public static translate(req: Request, options: FindManyOptions): void {\n    // Process orderby[]=Field|DESC syntax\n    for(let name in req.query) {\n      let orderbyMatcher = /^orderby$/;\n      if(name.match(orderbyMatcher)) {\n        if(Array.isArray(req.query[name])) {\n          for(let i:number=0;i<req.query[name].length;i++) {\n            let fieldname: string = req.query[name][i].toString();\n            this.setSingleOrderBy(fieldname, options);\n          }\n        } else {\n          let fieldname: string = req.query.orderby.toString();\n          this.setSingleOrderBy(fieldname, options);\n        }\n      }\n\n      // Process orderbyFieldname=DESC syntax\n      let obMatcher = /^orderby.+/;\n      if(name.match(obMatcher)) {\n        let fieldname: string = name.replace(/^orderby/,'');\n        let direction: string = (req.query[name]) ? req.query[name].toString():'ASC';\n        this.setSingleOrderBy(fieldname + '|' + direction, options);\n      }\n    }\n  }\n}\n\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"3ca76b1a4b646d6f43bac3ee8c0064cbc4ceb659"},"/home/jwatson/Source/typeqsfind/src/OptionsTranslator.ts":{"path":"/home/jwatson/Source/typeqsfind/src/OptionsTranslator.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":35}},"2":{"start":{"line":4,"column":39},"end":{"line":37,"column":3}},"3":{"start":{"line":7,"column":4},"end":{"line":10,"column":6}},"4":{"start":{"line":8,"column":19},"end":{"line":8,"column":52}},"5":{"start":{"line":9,"column":8},"end":{"line":9,"column":38}},"6":{"start":{"line":11,"column":4},"end":{"line":14,"column":6}},"7":{"start":{"line":12,"column":8},"end":{"line":13,"column":32}},"8":{"start":{"line":15,"column":4},"end":{"line":35,"column":6}},"9":{"start":{"line":18,"column":8},"end":{"line":21,"column":9}},"10":{"start":{"line":19,"column":26},"end":{"line":19,"column":62}},"11":{"start":{"line":20,"column":12},"end":{"line":20,"column":27}},"12":{"start":{"line":23,"column":8},"end":{"line":33,"column":9}},"13":{"start":{"line":24,"column":27},"end":{"line":24,"column":68}},"14":{"start":{"line":25,"column":26},"end":{"line":25,"column":32}},"15":{"start":{"line":26,"column":12},"end":{"line":31,"column":13}},"16":{"start":{"line":27,"column":16},"end":{"line":27,"column":47}},"17":{"start":{"line":30,"column":16},"end":{"line":30,"column":89}},"18":{"start":{"line":32,"column":12},"end":{"line":32,"column":27}},"19":{"start":{"line":34,"column":8},"end":{"line":34,"column":18}},"20":{"start":{"line":36,"column":4},"end":{"line":36,"column":29}},"21":{"start":{"line":38,"column":0},"end":{"line":38,"column":46}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":4,"column":39},"end":{"line":4,"column":40}},"loc":{"start":{"line":4,"column":51},"end":{"line":37,"column":1}},"line":4},"1":{"name":"OptionsTranslator","decl":{"start":{"line":5,"column":13},"end":{"line":5,"column":30}},"loc":{"start":{"line":5,"column":33},"end":{"line":6,"column":5}},"line":5},"2":{"name":"(anonymous_2)","decl":{"start":{"line":7,"column":31},"end":{"line":7,"column":32}},"loc":{"start":{"line":7,"column":53},"end":{"line":10,"column":5}},"line":7},"3":{"name":"(anonymous_3)","decl":{"start":{"line":11,"column":35},"end":{"line":11,"column":36}},"loc":{"start":{"line":11,"column":50},"end":{"line":14,"column":5}},"line":11},"4":{"name":"(anonymous_4)","decl":{"start":{"line":15,"column":34},"end":{"line":15,"column":35}},"loc":{"start":{"line":15,"column":49},"end":{"line":35,"column":5}},"line":15}},"branchMap":{"0":{"loc":{"start":{"line":12,"column":16},"end":{"line":13,"column":30}},"type":"binary-expr","locations":[{"start":{"line":12,"column":16},"end":{"line":12,"column":47}},{"start":{"line":13,"column":15},"end":{"line":13,"column":30}}],"line":12},"1":{"loc":{"start":{"line":18,"column":8},"end":{"line":21,"column":9}},"type":"if","locations":[{"start":{"line":18,"column":8},"end":{"line":21,"column":9}},{"start":{"line":18,"column":8},"end":{"line":21,"column":9}}],"line":18},"2":{"loc":{"start":{"line":18,"column":12},"end":{"line":18,"column":51}},"type":"binary-expr","locations":[{"start":{"line":18,"column":12},"end":{"line":18,"column":32}},{"start":{"line":18,"column":36},"end":{"line":18,"column":51}}],"line":18},"3":{"loc":{"start":{"line":23,"column":8},"end":{"line":33,"column":9}},"type":"if","locations":[{"start":{"line":23,"column":8},"end":{"line":33,"column":9}},{"start":{"line":23,"column":8},"end":{"line":33,"column":9}}],"line":23}},"s":{"0":1,"1":1,"2":1,"3":1,"4":2,"5":2,"6":1,"7":36,"8":1,"9":36,"10":1,"11":1,"12":35,"13":2,"14":2,"15":2,"16":2,"17":1,"18":1,"19":33,"20":1,"21":1},"f":{"0":1,"1":0,"2":2,"3":36,"4":36},"b":{"0":[36,34],"1":[1,35],"2":[36,1],"3":[2,33]},"inputSourceMap":{"version":3,"file":"/home/jwatson/Source/typeqsfind/src/OptionsTranslator.ts","sources":["/home/jwatson/Source/typeqsfind/src/OptionsTranslator.ts"],"names":[],"mappings":";;;AAGA;IAAA;IAmCA,CAAC;IAjCe,wBAAM,GAApB,UAAqB,UAAkB;QACrC,IAAI,IAAI,GAAW,MAAM,CAAC,IAAI,CAAC,UAAU,EAAC,QAAQ,CAAC,CAAC;QACpD,OAAO,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC;IAChC,CAAC;IAEa,4BAAU,GAAxB,UAAyB,GAAY;QACnC,OAAO,CACL,GAAG,CAAC,KAAK,CAAC,OAAO,KAAK,SAAS;eAC5B,GAAG,CAAC,IAAI,KAAK,EAAE,CACnB,CAAC;IACJ,CAAC;IAEa,2BAAS,GAAvB,UAAwB,GAAY;QAElC,0CAA0C;QAC1C,gDAAgD;QAChD,IAAG,GAAG,CAAC,MAAM,KAAK,KAAK,IAAI,GAAG,CAAC,IAAI,KAAK,EAAE,EAAE;YAC1C,IAAI,OAAO,GAAoB,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,CAAoB,CAAC;YACvF,OAAO,OAAO,CAAC;SAChB;QACD,uCAAuC;QACvC,IAAG,GAAG,CAAC,KAAK,CAAC,OAAO,KAAK,SAAS,EAAE;YAClC,IAAI,QAAQ,GAAQ,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,KAAK,CAAC,OAAO,CAAC,QAAQ,EAAE,CAAC,CAAC;YAC9D,IAAI,OAAO,SAAiB,CAAC;YAC7B,IAAI;gBACF,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAoB,CAAC;aACnD;YAAC,OAAM,CAAC,EAAE;gBACT,MAAM,mDAAmD,GAAG,CAAC,CAAC,QAAQ,EAAE,CAAC;aAC1E;YACD,OAAO,OAA0B,CAAC;SACnC;QACD,OAAO,EAAqB,CAAC;IAC/B,CAAC;IACH,wBAAC;AAAD,CAAC,AAnCD,IAmCC;AAnCY,8CAAiB","sourcesContent":["import {Request} from 'express';\nimport {FindManyOptions} from 'typeorm';\n\nexport class OptionsTranslator {\n\n  public static decode(jsonString: string): string {\n    let buff: Buffer = Buffer.from(jsonString,'base64');\n    return buff.toString('utf-8');\n  }\n\n  public static hasOptions(req: Request): boolean {\n    return (\n      req.query.options !== undefined\n      || req.body !== {}\n    );\n  }\n\n  public static translate(req: Request): FindManyOptions {\n\n    // If there was a body to the GET request,\n    // we assume that the body is an options object.\n    if(req.method === 'GET' && req.body !== {}) {\n      let options: FindManyOptions = JSON.parse(JSON.stringify(req.body)) as FindManyOptions;\n      return options;\n    }\n    // process raw options from querystring\n    if(req.query.options !== undefined) {\n      let optsJson: any = this.decode(req.query.options.toString());\n      let options: FindManyOptions;\n      try {\n        options = JSON.parse(optsJson) as FindManyOptions;\n      } catch(e) {\n        throw 'JSON options input could not be parsed properly. ' + e.toString();\n      }\n      return options as FindManyOptions;\n    }\n    return {} as FindManyOptions;\n  }\n}\n\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"a1716fe520068caaf1cb85269d9a2d5fd2fd928a"}}